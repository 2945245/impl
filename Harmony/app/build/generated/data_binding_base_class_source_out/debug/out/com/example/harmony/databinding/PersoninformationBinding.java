// Generated by view binder compiler. Do not edit!
package com.example.harmony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.harmony.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PersoninformationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Allergies;

  @NonNull
  public final Button Back;

  @NonNull
  public final Button Done;

  @NonNull
  public final EditText Email;

  @NonNull
  public final EditText Name;

  @NonNull
  public final EditText editTextTextPersonName2;

  @NonNull
  public final EditText editTextTextPersonName3;

  @NonNull
  public final EditText editTextTextPersonName4;

  @NonNull
  public final LinearLayout linearLayout20;

  @NonNull
  public final LinearLayout linearLayout21;

  @NonNull
  public final LinearLayout linearLayout22;

  @NonNull
  public final LinearLayout linearLayout23;

  @NonNull
  public final LinearLayout linearLayout24;

  @NonNull
  public final LinearLayout linearLayout25;

  @NonNull
  public final LinearLayout linearLayout26;

  @NonNull
  public final EditText phoneNumber;

  @NonNull
  public final EditText pphoneNumber;

  @NonNull
  public final TextView textView9;

  private PersoninformationBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Allergies,
      @NonNull Button Back, @NonNull Button Done, @NonNull EditText Email, @NonNull EditText Name,
      @NonNull EditText editTextTextPersonName2, @NonNull EditText editTextTextPersonName3,
      @NonNull EditText editTextTextPersonName4, @NonNull LinearLayout linearLayout20,
      @NonNull LinearLayout linearLayout21, @NonNull LinearLayout linearLayout22,
      @NonNull LinearLayout linearLayout23, @NonNull LinearLayout linearLayout24,
      @NonNull LinearLayout linearLayout25, @NonNull LinearLayout linearLayout26,
      @NonNull EditText phoneNumber, @NonNull EditText pphoneNumber, @NonNull TextView textView9) {
    this.rootView = rootView;
    this.Allergies = Allergies;
    this.Back = Back;
    this.Done = Done;
    this.Email = Email;
    this.Name = Name;
    this.editTextTextPersonName2 = editTextTextPersonName2;
    this.editTextTextPersonName3 = editTextTextPersonName3;
    this.editTextTextPersonName4 = editTextTextPersonName4;
    this.linearLayout20 = linearLayout20;
    this.linearLayout21 = linearLayout21;
    this.linearLayout22 = linearLayout22;
    this.linearLayout23 = linearLayout23;
    this.linearLayout24 = linearLayout24;
    this.linearLayout25 = linearLayout25;
    this.linearLayout26 = linearLayout26;
    this.phoneNumber = phoneNumber;
    this.pphoneNumber = pphoneNumber;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PersoninformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PersoninformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.personinformation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PersoninformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Allergies;
      TextView Allergies = ViewBindings.findChildViewById(rootView, id);
      if (Allergies == null) {
        break missingId;
      }

      id = R.id.Back;
      Button Back = ViewBindings.findChildViewById(rootView, id);
      if (Back == null) {
        break missingId;
      }

      id = R.id.Done;
      Button Done = ViewBindings.findChildViewById(rootView, id);
      if (Done == null) {
        break missingId;
      }

      id = R.id.Email;
      EditText Email = ViewBindings.findChildViewById(rootView, id);
      if (Email == null) {
        break missingId;
      }

      id = R.id.Name;
      EditText Name = ViewBindings.findChildViewById(rootView, id);
      if (Name == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName2;
      EditText editTextTextPersonName2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName2 == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName3;
      EditText editTextTextPersonName3 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName3 == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName4;
      EditText editTextTextPersonName4 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName4 == null) {
        break missingId;
      }

      id = R.id.linearLayout20;
      LinearLayout linearLayout20 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout20 == null) {
        break missingId;
      }

      id = R.id.linearLayout21;
      LinearLayout linearLayout21 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout21 == null) {
        break missingId;
      }

      id = R.id.linearLayout22;
      LinearLayout linearLayout22 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout22 == null) {
        break missingId;
      }

      id = R.id.linearLayout23;
      LinearLayout linearLayout23 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout23 == null) {
        break missingId;
      }

      id = R.id.linearLayout24;
      LinearLayout linearLayout24 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout24 == null) {
        break missingId;
      }

      id = R.id.linearLayout25;
      LinearLayout linearLayout25 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout25 == null) {
        break missingId;
      }

      id = R.id.linearLayout26;
      LinearLayout linearLayout26 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout26 == null) {
        break missingId;
      }

      id = R.id.phoneNumber;
      EditText phoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumber == null) {
        break missingId;
      }

      id = R.id.pphoneNumber;
      EditText pphoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (pphoneNumber == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      return new PersoninformationBinding((ConstraintLayout) rootView, Allergies, Back, Done, Email,
          Name, editTextTextPersonName2, editTextTextPersonName3, editTextTextPersonName4,
          linearLayout20, linearLayout21, linearLayout22, linearLayout23, linearLayout24,
          linearLayout25, linearLayout26, phoneNumber, pphoneNumber, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
